---
- name: Generate cosbench test
  k8s:
    definition: "{{ lookup('template', 'configmap.yml.j2') | from_yaml }}"

- name: Get current state
  k8s_info:
    api_version: ripsaw.cloudbulldozer.io/v1alpha1
    kind: Benchmark
    name: '{{ meta.name }}'
    namespace: '{{ operator_namespace }}'
  register: resource_state

- operator_sdk.util.k8s_status:
    api_version: ripsaw.cloudbulldozer.io/v1alpha1
    kind: Benchmark
    name: "{{ meta.name }}"
    namespace: "{{ operator_namespace }}"
    status:
      state: StartingDrivers
      complete: false
  when: resource_state.resources[0].status.state is not defined

- name: Get current state - If it has changed
  k8s_info:
    api_version: ripsaw.cloudbulldozer.io/v1alpha1
    kind: Benchmark
    name: '{{ meta.name }}'
    namespace: '{{ operator_namespace }}'
  register: resource_state

# now we start drivers

- block:
  - name: Start COSBench Driver(s)
    k8s:
      definition: "{{ lookup('template', 'drivers.yaml') | from_yaml }}"
    when: workload_args.drivers|default('1')|int > 0
    with_sequence: start=1 count={{ workload_args.drivers|default('1')|int }}

  - name: Capture pod list
    k8s_info:
      kind: Pod
      api_version: v1
      namespace: '{{ operator_namespace }}'
      label_selectors:
        - app = cosbench-driver-{{ trunc_uuid }}
    register: driver_pods

  - operator_sdk.util.k8s_status:
      api_version: ripsaw.cloudbulldozer.io/v1alpha1
      kind: Benchmark
      name: "{{ meta.name }}"
      namespace: "{{ operator_namespace }}"
      status:
        state: Starting Controller
        complete: false
    when : "{{ workload.drivers }} == (cosbench_driver | json_query('resources[].status[]')|selectattr('phase','match','Running')|list|length)"
  when: resource_state.resources[0].status.state == "StartingDrivers"

# now we start controller

- block:

  - name: Start COSBench Controller
    k8s:
      definition: "{{ lookup('template', 'controller.yaml') | from_yaml }}"

  - name: Capture controller info
    k8s_info:
      kind: Pod
      api_version: v1
      namespace: '{{ operator_namespace }}'
      label_selectors:
        - app = cosbench-controller-{{ trunc_uuid }}
    register: cosbench_ctlr

  - operator_sdk.util.k8s_status:
      api_version: ripsaw.cloudbulldozer.io/v1alpha1
      kind: Benchmark
      name: "{{ meta.name }}"
      namespace: "{{ operator_namespace }}"
      status:
        state: RunningTest
        complete: false
    when : "1 == (cosbench_ctlr | json_query('resources[].status[]')|selectattr('phase','match','Running')|list|length)"
  when: resource_state.resources[0].status.state == "StartingController"

# now we run test

- block :

  # TBS - invoke test by talking to controller
 
  - operator_sdk.util.k8s_status:
      api_version: ripsaw.cloudbulldozer.io/v1alpha1
      kind: Benchmark
      name: "{{ meta.name }}"
      namespace: "{{ operator_namespace }}"
      status:
        state: Complete
        complete: true
    when : "driver_pods|json_query('resources[].status[]')|selectattr('phase','match','Succeeded')|list|length > 0 "

  # TBS - shut down pods when done?

  when: resource_state.resources[0].status.state == "RunningTest"
